% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_tissue_data.r
\name{get_tissue_data}
\alias{get_tissue_data}
\title{Get Tissue Data}
\usage{
get_tissue_data(sillyvec, username, password, file = NULL, import.vars = TRUE)
}
\arguments{
\item{sillyvec}{A character vector of silly codes.}

\item{username}{Your state user name.}

\item{password}{Your password used to access LOKI.}

\item{file}{The file path for writing out a CSV file of the output (optional).}

\item{import.vars}{If TRUE, output contains the 31 fields used by the Loki tissue importer (same as OceanAK report).
If FALSE, output includes 7 additional collection information fields.}
}
\value{
A tibble containing the specific tissue data, as determined by \code{import.vars}.
}
\description{
This function connects to LOKI and pulls the tissue information for each silly in sillyvec.
}
\note{
Output of this function can be used for creating an import file for the Loki tissue importer,
adding additional information to the Loki tissue table (default output), and
generating extraction lists for lab projects.

The tissue importer requires that all 31 columns are in the correct order and are present.
When writing the import file, ensure it does not contain NAs. To export the tissue import file
using \code{\link[readr:write_delim]{readr::write_csv()}}, set the \code{eol} argument to "\\r\\n" for proper formatting:
\code{import_file \%>\% readr::write_csv(file = "ImportFile.csv", na = "", eol = "\\r\\n")}

Additionally, if you have date columns, change their format to 'numeric' in Microsoft Excel
before importing tissue information with dates.
}
\section{Returns}{

If \code{import.vars = TRUE}, the function returns a tibble with the following 31 variables:
\itemize{
\item{FK_COLLECTION_ID}{...}
\item{FK_FISH_ID}{...}
\item{PK_TISSUE_TYPE}{...}
\item{CAPTURE_LOCATION}{...}
\item{CAPTURE_DATE}{...}
\item{END_CAPTURE_DATE}{...}
\item{LATITUDE}{...}
\item{LONGITUDE}{...}
\item{MESH_SIZE}{...}
\item{MESH_SIZE_COMMENT}{...}
\item{IS_MISSING_PAIRED_DATA_EXISTS}{...}
\item{WELL_HAS_MORE_THAN_ONE_SAMPLE}{...}
\item{IS_PRESENT_IN_DATASHEET}{...}
\item{IS_PRESENT_BUT_NOT_IN_DS}{...}
\item{VIAL_BARCODE}{...}
\item{CONTAINER_ARRAY_TYPE_ID}{...}
\item{DNA_TRAY_WORKBENCH_ID}{...}
\item{DNA_TRAY_CODE}{...}
\item{DNA_TRAY_WELL_POS}{...}
\item{DNA_TRAY_WELL_CODE}{...}
\item{STORAGE_ID}{...}
\item{UNIT}{...}
\item{SHELF_RACK}{...}
\item{SLOT}{...}
\item{EXHAUSTED_HOW}{...}
\item{EXHAUSTED_BY}{...}
\item{EXHAUSTED_DATE}{...}
\item{AGENCY}{...}
\item{OTHER_AGENCY_KEY}{...}
\item{NUM_OTOLITHS_MISSING}{...}
\item{OTO_INVENTORY_COMMENT}{...}
}

If \code{import.vars = FALSE}, the function returns a tibble with 7 collection information variables and the 31 tissue import variables.
The additional collection information variables are:
\itemize{
\item{SILLY_CODE}{...}
\item{REGION_CODE}{...}
\item{QUADRANT}{...}
\item{LOCATION_CODE}{...}
\item{LOCATION_DESCRIPTOR}{...}
\item{LIFE_STAGE}{...}
\item{COLLECTION_TYPE}{...}
}
}

\examples{
\dontrun{
get_tissue_data(
  sillyvec = c("KCDVF18", "KCDVF19", "KCDVF20"),
  username = "user",
  password = "password",
  file = path.expand("~/test_tissue_table.csv"),
  import.vars = FALSE
)
}

}
