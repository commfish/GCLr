% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ConfusionMatrices.GCL.R
\name{ConfusionMatrices.GCL}
\alias{ConfusionMatrices.GCL}
\title{This function takes the genetic likelihood profile produced by rubias::self_assign() and summarizes it into tibbles at the group-by-group, group-by-pop, and pop-by-pop level.}
\usage{
ConfusionMatrices.GCL(
  reference,
  gen_start_col = 5,
  output = c("group_group", "pop_group", "pop_pop")[1]
)
}
\arguments{
\item{reference}{A rubias baseline object created by create_rubias_baseline().}

\item{gen_start_col}{The first column containing genetic data in the baseline object. The default is 5, unless the baseline object is modified with additional variables.}

\item{output}{A character vector specifying the summary tibbles to produce. Must be one or more of the following: "pop_pop", "pop_group", "group_group". The default is "group_group".}
}
\value{
A named list of tibbles in long format:
\describe{
\item{group_group}{A tibble containing the following variables: repunit (known repunit/ reporting group), inferred_repunit (inferred repunit), and mean_group_group_scaled_like (average probability of each individual from a group originating from a pop in that group).}
\item{pop_group}{A tibble containing the following variables: collection (known population), inferred_repunit (inferred repunit), and mean_pop_group_scaled_like (average probability of each individual from a pop originating from a pop in that group).}
\item{pop_pop}{A tibble containing the following variables: pop (known population), inferred_pop (inferred repunit), and mean_pop_pop_scaled_like (average probability of each individual from a pop originating from a pop).}
}
}
\description{
The function provides insights into how well populations/reporting groups are differentiated by the genetic markers and can help in marker selection.
}
\examples{
baseline <- read_csv("V:/Analysis/5_Coastwide/Chum/NPen2WA_Chum_baseline/rubias/baseline/NPen2Wa_Chum_227pops_91loci_base.csv")
ConfusionMatrices_out <- ConfusionMatrices.GCL(reference = baseline, gen_start_col = 5, output = c("group_group", "pop_group", "pop_pop"))
}
