% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gcl2nexus.r
\name{gcl2nexus}
\alias{gcl2nexus}
\title{Convert ".gcl" Objects to NEXUS File}
\usage{
gcl2nexus(
  sillyvec,
  loci,
  path,
  VialNums = TRUE,
  PopNames = NULL,
  ncores = 4,
  LocusCtl = LocusControl
)
}
\arguments{
\item{sillyvec}{A character vector of silly codes to include in the NEXUS file.}

\item{loci}{A character vector of locus names to include in the NEXUS file.}

\item{path}{The full file path to write out the NEXUS file; with "\\" or "/" separator between folders.}

\item{VialNums}{Logical; if TRUE (default), vial numbers will be included for each individual next to their silly code separated by an underscore (e.g., "KCRESC10_1"). If FALSE, only the SILLY code will be included for each individual (e.g., "KCRESC10").}

\item{PopNames}{Optional character vector the same length as \code{sillyvec} to give populations new names. If NULL, \code{PopNames} defaults to \code{sillyvec}.}

\item{ncores}{The number of cores for multithreading using \code{\link[=doParallel]{doParallel()}} and \code{\link[=foreach]{foreach()}}. Default is 4.}

\item{LocusCtl}{an object created by \code{\link[=create_locuscontrol]{create_locuscontrol()}}, (default = LocusControl)}
}
\value{
Writes out a NEXUS file to the specified path.
}
\description{
Write out a NEXUS file in GDA input format from ".gcl" objects.
}
\details{
This function requires a \code{LocusControl} object. Run \code{\link[=create_locuscontrol]{create_locuscontrol()}} prior to this function.
}
\examples{
sillys <- GCLr::base2gcl(GCLr::ex_baseline)

loci <- GCLr::ex_baseline[,-c(1:5)] \%>\%
  names() \%>\%
  gsub(pattern = "*\\\\.1", x = ., replacement = "") \%>\%
  unique()

gcl2nexus(sillyvec = sillys, loci = loci, path = path.expand("~/nexusfile.nex"), VialNums = TRUE, PopNames = NULL, ncores = parallel::detectCores(), LocusCtl = GCLr::ex_LocusControl)

}
