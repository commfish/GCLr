% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_collection_info.R
\name{get_collection_info}
\alias{get_collection_info}
\title{Get Collection Information}
\usage{
get_collection_info(
  file = NULL,
  username,
  password,
  location.pmatch = FALSE,
  sampled = NULL,
  common_name = NULL,
  collection_type = NULL,
  region = NULL,
  quadrant = NULL,
  location = NULL
)
}
\arguments{
\item{file}{the file path, including .csv extension, for writing out a csv file of the output. (default = NULL)}

\item{username}{your state user name}

\item{password}{your password used to access LOKI; see Eric Lardizabal if you need to set up a password}

\item{location.pmatch}{logical; whether to use partial matching for location (default = FALSE)}

\item{sampled}{was the collection sampled? Choices: "Yes" or "No" (default = NULL); Variations of Yes and No will also work: "yes", "Y", "y", "no", "N", "n"}

\item{common_name}{the common name exactly the way it is spelled in Loki (e.g., "Salmon, Sockeye") (default = NULL)}

\item{collection_type}{type of collection. Choices: "Baseline", "Experimental", "Forensics", "Mark Recapture", "Mixture", "N/A", "Species ID" (default = NULL)}

\item{region}{the region name exactly the way it is spelled in Loki (default = NULL)}

\item{quadrant}{the quadrant name exactly the way it is spelled in Loki (default = NULL)}

\item{location}{the location name exactly the way it is spelled in Loki (default = NULL)}
}
\value{
The function outputs a tibble of collection information and writes out an optional csv file
}
\description{
This function connects to LOKI and pulls a collections information report.
}
\details{
This function only requires username and password arguments to work. If a file path is supplied, then a csv file of the collection information will be written.
The remaining arguments, except location.pmatch, are filters. All filters can accept multiple filter items (i.e., vectors with lengths >= 1). If no filters are supplied then information for all collections in Loki will be pulled.
When supplying a region and quadrant, the quadrant must be contained within the region or the function will stop and list the allowable quadrant values for the region.
When location.pmatch = FALSE, the location names must be spelled the same as in Loki. If a location name doesn't exist in Loki, the function will stop and an error message will list out the locations that don't exist.
When location.pmatch = TRUE, the function will find collections with location names containing text that matches the supplied location names. Using the location.pmatch argument can be useful if you don't know the exact spelling of the location names you are looking for.
If no collection location names contain the supplied location text strings, the function will stop and give an error message.
The remaining arguments are filters. If no filters are supplied then information for all collections in Loki will be pulled.
}
\note{
The counts in the 'Bulk remaining' column may not be accurate for some collections.
This happens when tissues are transferred out of the bottles to another container type and the remaining bulk count is not updated in Loki.
}
\examples{
\dontrun{

#All collection info and no output file
GCLr::get_collection_info(file = NULL, username = "awbarclay", password = "************", location.pmatch = FALSE, sampled = NULL, common_name = NULL, collection_type = NULL, region = NULL, quadrant = NULL, location = NULL)

#All collection info and write an output file
GCLr::get_collection_info(file = "CollectionInfo.csv", username = "awbarclay", password = "************", location.pmatch = FALSE, sampled = NULL, common_name = NULL, collection_type = NULL, region = NULL, quadrant = NULL, location = NULL)

#Collection info for all sockeye salmon baseline collections that were sampled
GCLr::get_collection_info(file = "CollectionInfo.csv", username = "awbarclay", password = "************", location.pmatch = FALSE, sampled = "Yes", common_name = "Salmon, Sockeye", collection_type = "Baseline", region = NULL, quadrant = NULL, location = NULL)

#Find all sampled Chinook salmon baseline collections with "Moose" in the collection location 
GCLr::get_collection_info(file = "CollectionInfo.csv", username = "awbarclay", password = "************", location.pmatch = TRUE, sampled = "Yes", common_name = "Salmon, Chinook", collection_type = "Baseline", region = NULL, quadrant = NULL, location = "Moose")

}
}
