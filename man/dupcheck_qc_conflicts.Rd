% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dupcheck_qc_conflicts.R
\name{dupcheck_qc_conflicts}
\alias{dupcheck_qc_conflicts}
\title{Investigate QC Samples With Conflicts}
\usage{
dupcheck_qc_conflicts(
  conflicts,
  conflict_rate,
  project_sillys,
  LocusCtl = LocusControl,
  ncores = parallel::detectCores()
)
}
\description{
@description
This function checks samples with conflict rates > \code{conflict_rate} and runs \code{\link[=dupcheck_among_sillys]{dupcheck_among_sillys()}} to see if they match any samples in \code{project_sillys}.(see details)

@param conflicts a tibble containing 3 variables:
\iemize{
\item \code(SillySource) original silly code and fish ID for each individual with conflicts
\item \code(n) the number of conflicts among loci
\item \code(p) the proportion of conflicts among loci
}

@param conflict_rate the conflict rate for determining which samples to investigate. This is assinged at the beginging of the QC script.
@param project_sillys a character vector of silly codes included in the project
@param LocusCtl an object created by \code{\link[=create_locuscontrol]{create_locuscontrol()}}, (default = \code{LocusControl})
@param ncores the number of cores to run in parallel (default = \code{\link[parallel:detectCores]{parallel::detectCores()}})

@seealso \code{\link[=create_locuscontrol]{create_locuscontrol()}}
@seealso \code{\link[=dupcheck_among_sillys]{dupcheck_among_sillys()}}

@details
The conflict rates used by this function are derived from Loki QC conflict reports.
Samples with high conflict rates may indicate catostrophic lab errors.
Checking these samples for duplicates in the project silly can help the QC analyzer determine if an error occured and how to fix the issue.

@note this function is only used in the QC script, so it's not exported to the package namespace

@keywords invisible
}
