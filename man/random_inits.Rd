% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/random_inits.r
\name{random_inits}
\alias{random_inits}
\title{Generate Random Initial Start Values for BAYES or rubias Chains}
\usage{
random_inits(
  groupvec,
  groupweights = rep(1/max(groupvec), max(groupvec)),
  nchains = 5,
  type = c("BAYES", "rubias")[1],
  sillyvec = NULL
)
}
\arguments{
\item{groupvec}{Numeric vector indicating the group affiliation of each population in sillyvec.}

\item{groupweights}{The weights for each group in groupvec. For example, to give the same weight to all groups groupweights = rep(1/max(groupvec), max(groupvec)).}

\item{nchains}{Number of BAYES or rubias chains that you need starting values for.}

\item{type}{Character vector indicating whether you want an initial start value object for "BAYES" or "rubias".}

\item{sillyvec}{A vector of silly codes without the ".gcl" extension. This argument is needed when type = "rubias".}
}
\value{
If type = "BAYES", the function outputs a matrix with nrow = npops and ncol = nchains.
If type = "rubias", the function outputs a list of length = nchains, and each element is a tibble
with "collection" and "pi_init" variables.
}
\description{
This function creates either a matrix of randomly generated initial start values for multiple BAYES chains
or a list of tibbles (length = nchain) containing randomly generated initial start values for multiple rubias chains.
The values for each chain add to 1.
}
\examples{
sillyvec <- c("KQUART060809", "KCRESC06", "KKENU09", "KJUNE050607", "KRUSSR05060708", "KBENJ0506", "KKILL0506", "KFUNN0506", "KKENAI030406", "KSLIK040508")
groupvec <- c(1, 1, 2, 2, 3, 4, 4, 5, 2, 5)

BAYES_inits <- random_inits(groupvec = groupvec, groupweights = rep(1/max(groupvec), max(groupvec)), nchains = 5, type = "BAYES", sillyvec = NULL)
rubias_inits <- random_inits(groupvec = groupvec, groupweights = rep(1/max(groupvec), max(groupvec)), nchains = 5, type = "rubias", sillyvec = sillyvec)

}
