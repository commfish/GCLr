% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/create_prior.r
\name{create_prior}
\alias{create_prior}
\title{Create Prior Objects for BAYES or rubias}
\usage{
create_prior(
  groupvec,
  groupweights,
  minval = 0.01,
  type = c("BAYES", "rubias")[1],
  sillyvec = NULL
)
}
\arguments{
\item{groupvec}{Numeric vector indicating the group affiliation of each population in \code{sillyvec}.}

\item{groupweights}{The weights for each group in \code{groupvec}. For example, to give the same weight to all groups, use \code{groupweights = rep(1/max(groupvec), max(groupvec))}.}

\item{minval}{the minimum value of the weight given to each population (default = 0.01).}

\item{type}{Whether you want a prior object for "BAYES" or \pkg{rubias}. Default is "BAYES".}

\item{sillyvec}{A vector of silly codes without the ".gcl" extension. This argument is needed when \code{type = "rubias"}.}
}
\value{
For \code{type = "BAYES"}, the function outputs a vector with names = \code{groupvec}.
For \code{type = "rubias"}, the function outputs a tibble with "collection" and "pi_param" variables.
}
\description{
This function creates a prior object for BAYES or rubias.
}
\details{
This function is also used by \code{\link[=multichain_inits]{multichain_inits()}} to create initial starting values.
}
\note{
The BAYES prior object is supplied to the prior argument in \code{create_bayes_ctl()}.
The rubias prior object is supplied to the pi_prior argument in \code{run_rubias_mix()}.
}
\examples{

groupvec <- c(1, 1, 2, 2, 3, 4, 4, 5, 2, 5)
sillyvec <- c("KQUART060809", "KCRESC06", "KKENU09", "KJUNE050607", "KRUSSR05060708", "KBENJ0506", "KKILL0506", "KFUNN0506", "KKENAI030406", "KSLIK040508")
create_prior(groupvec = groupvec, groupweights = rep(1/max(groupvec), max(groupvec)), minval = 0.01, type = "BAYES", sillyvec = NULL)
create_prior(groupvec = groupvec, groupweights = rep(1/max(groupvec), max(groupvec)), minval = 0.01, type = "rubias", sillyvec = sillyvec)

}
