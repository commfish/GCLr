% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/remove_ind_miss_loci.r
\name{remove_ind_miss_loci}
\alias{remove_ind_miss_loci}
\title{Remove Individuals with Missing Loci Data}
\usage{
remove_ind_miss_loci(
  sillyvec,
  loci = LocusControl$locusnames,
  proportion = 0.8,
  LocusCtl = LocusControl
)
}
\arguments{
\item{sillyvec}{A character vector of silly codes without the ".gcl" extension (e.g. sillyvec <- c("KQUART06","KQUART08","KQUART10")).}

\item{loci}{A character vector specifying the names of loci (columns) in the data sets to be considered for missing data removal. Default is 'LocusControl$locusnames'.}

\item{proportion}{A numeric value (0 to 1) specifying the maximum proportion of missing data allowed for each individual in the specified loci. Default is 0.8.}

\item{LocusCtl}{An object of class 'LocusControl', containing locus names created by \code{\link[=create_locuscontrol]{create_locuscontrol()}}. Default is 'LocusControl'.}
}
\value{
A data frame containing the individuals removed from each data set in 'sillyvec', along with their corresponding data set names.
}
\description{
This function removes individuals from a data set based on the proportion of missing data in specified loci.
}
\details{
This function takes a vector of data set (silly) names (\code{sillyvec}) and removes individuals from each silly based on the proportion of missing data in the specified loci. The \code{loci} argument allows the user to specify the specific loci (columns) to be considered for missing data removal. By default, all loci in \code{LocusControl} will be used.

The function calculates the proportion of missing data for each individual in the specified loci. If the proportion of missing data for an individual exceeds the \code{proportion} argument, the individual is removed from the silly. Only the individuals with a proportion of missing data less than or equal to \code{proportion} will remain in the silly.

Note that the function uses \code{\link[base:get]{base::get()}} to access each data set and relies on the \code{dplyr} and \code{purrr} packages for data manipulation and filtering.

If no individuals are removed from any of the sillys, the function will print a message indicating that no individuals were removed. Otherwise, it will print the total number of individuals removed from each silly in \code{sillyvec}.
}
\examples{
sillyvec <- GCLr::base2gcl(GCLr::ex_baseline)

loci <- GCLr::ex_LocusControl$locusnames[-c(10, 12, 13, 32, 33, 97, 98)]

naloci <- dimnames(SURGOATM09.gcl)[[2]][100:201]
SURGOATM09.gcl[c(1, 5, 30), naloci] <- NA
assign("SURGOATM09.gcl", SURGOATM09.gcl, pos = -1)

GCLr::remove_ind_miss_loci(sillyvec = sillyvec, loci = loci, proportion = 0.8, LocusCtl = ex_LocusControl)

}
\seealso{
\code{\link[=remove_ids]{remove_ids()}}
}
