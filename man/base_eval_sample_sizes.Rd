% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/base_eval_sample_sizes.r
\name{base_eval_sample_sizes}
\alias{base_eval_sample_sizes}
\title{Get sample sizes for rubias baseline evaluation.}
\usage{
base_eval_sample_sizes(
  sillyvec,
  group_names,
  groupvec,
  mixsize,
  scenarios = round(seq(0.01, 1, 0.01), 2),
  maxprop = 0.5,
  seed = 56
)
}
\arguments{
\item{sillyvec}{a character vector of silly codes without the ".gcl" extension (e.g. sillyvec <- c("KQUART06","KQUART08","KQUART10")).}

\item{group_names}{character vector of group names the length of max(groupvec)}

\item{groupvec}{a numeric vector indicating the group affiliation of each pop in sillyvec}

\item{mixsize}{a numeric vector of length 1; the sample size of each test mixture}

\item{scenarios}{a numeric vector of proportions to test for each group}

\item{maxprop}{a numeric vector of length 1; the maximum proportion of baseline individuals to select from each reporting group (see details).}

\item{seed}{integer to set the seed for rmultinom(), so sample sizes are reproducible}
}
\value{
a tibble with 4 variables: test_group, scenario, repunit, and samps. For each test_group and scenario, the number of rows will be length(group_names).
}
\description{
This function creates a tibble of sample sizes for creating baseline and mixture files for baseline evaluation tests.
}
\details{
The maxprop argument should be set to avoid oversampling populations, so the allele frequencies . For example, if maxprop = 0.5, the output tibble will only contain scenarios where sample sizes for the test_group do no exceed 50\% of the fish in the baseline for that group.
}
\examples{

attach("V:/Analysis/2_Central/Chinook/Susitna River/Susitna_Chinook_baseline_2020/Susitna_Chinook_baseline_2020.Rdata")
Final_Pops <- Final_Pops \%>\% mutate(group = factor(group, levels = unique(group)))
base_eval_sample_sizes(sillyvec = Final_Pops$silly, group_names = Final_Pops$group \%>\% levels(), groupvec = Final_Pops$group \%>\% as.numeric(), scenarios = round(seq(.01, 1, .01), 2), mixsize = 200, maxprop = 0.5, seed = 123)

}
