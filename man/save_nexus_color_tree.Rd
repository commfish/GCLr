% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/save_nexus_color_tree.r
\name{save_nexus_color_tree}
\alias{save_nexus_color_tree}
\title{Save Nexus File that includes a Phylogenetic Tree.}
\usage{
save_nexus_color_tree(tree, file, groupvec, group.col, tip.labs, sep = "_")
}
\arguments{
\item{tree}{a phylogenetic tree object (\code{class = "phylo"}) produced by the \pkg{ape} package}

\item{file}{the file path with file name including .nex extension}

\item{groupvec}{a numeric vector indicating the group affiliation of each tip label}

\item{group.col}{a character vector of R \code{\link[grDevices:colors]{grDevices::colors()}} with a length of \code{max(groupvec)} to color the branches}

\item{tip.labs}{A character vector with the same length as groupvec to label the tips of the tree. tip.labs cannot have spaces to work in FigTree. If tip.labs contains spaces, this function will replace them with an underscore.}

\item{sep}{Delimiter used to replace spaces in tip.labs. If spaces are left in tip.labs (called TAXALABLES in the NEXUS file) when FigTree opens the file, an error message will pop up saying the number of taxa is greater than ntaxa.}
}
\description{
This function is a wrapper for \code{\link[ape:write.nexus]{ape::write.nexus()}} and creates a Nexus format tree file including tip labels and branch colors, which can be opened and modified in FigTree. FigTree can be downloaded from GitHub: \href{https://github.com/rambaut/figtree/releases}{FigTree Releases}
}
\examples{

groupvec <- GCLr::ex_baseline \%>\%
  dplyr::group_by(collection) \%>\%
  dplyr::filter(dplyr::row_number()==1) \%>\%
  dplyr::pull(repunit) \%>\%
  factor() \%>\%
  as.numeric()

sillyvec <- GCLr::base2gcl(ex_baseline)

loci <- GCLr::ex_baseline[,-c(1:5)] \%>\%
  names() \%>\%
  gsub(pattern = "*\\\\.1", x = ., replacement = "") \%>\%
  unique()

pwfst <- GCLr::pairwise_fst(sillyvec = sillyvec, loci = loci, inputfile = system.file("genepop", "ex_genepop.txt", package = "GCLr"), ncores = parallel::detectCores())

FstTree <- ape::nj(pwfst)

GCLr::save_nexus_color_tree(tree = FstTree, file = path.expand("~/example_tree.nex"), groupvec = groupvec, group.col = c("green", "red", "blue"), tip.labs = paste0("pop", 1:14))

}
