% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/create_rubias_base_eval.r
\name{create_rubias_base_eval}
\alias{create_rubias_base_eval}
\alias{CreateRubiasBaselineEval.GCL}
\title{Create Rubias Mixture and Baseline Files}
\usage{
create_rubias_base_eval(
  sillyvec,
  group_names,
  loci,
  groupvec,
  sample_sizes,
  test_groups = group_names,
  prprtnl = FALSE,
  base.path = "rubias/baseline",
  mix.path = "rubias/mixture",
  seed = 123,
  ncores = 4,
  file_type = c("fst", "csv")[1]
)

CreateRubiasBaselineEval.GCL(
  sillyvec,
  group_names,
  loci,
  groupvec,
  sample_sizes,
  test_groups = group_names,
  prprtnl = FALSE,
  base.path = "rubias/baseline",
  mix.path = "rubias/mixture",
  seed = 123,
  ncores = 4,
  file_type = c("fst", "csv")[1]
)
}
\arguments{
\item{sillyvec}{a vector of silly codes without the ".gcl" extension (e.g., sillyvec <- c("KQUART06","KQUART08","KQUART10"))}

\item{group_names}{A character vector of group names with a length equal to the maximum value in \code{groupvec}}

\item{loci}{A character vector of locus names as they are spelled in LOKI.}

\item{groupvec}{A numeric vector indicating the group affiliation of each population in \code{sillyvec}.}

\item{sample_sizes}{A tibble produce by \code{\link[=base_eval_sample_sizes]{base_eval_sample_sizes()}} containing four variables (see details):
\itemize{
\item \code{test_group}
\item \code{scenario}
\item \code{repunit}
\item \code{samps}
}}

\item{test_groups}{a character vector of groups to test}

\item{prprtnl}{If set to TRUE, the samples for each repunit will be selected in proportion to the number of samples in each population (default: FALSE).}

\item{base.path}{The file path where the baseline files will be written.}

\item{mix.path}{The file path where the mixture files will be written.}

\item{seed}{An integer to set the seed for the random sampler function sample().}

\item{ncores}{A numeric vector of length one indicating the number of cores to use.}

\item{file_type}{Whether to save the baseline and mixture files as .fst (default and faster) or .csv files.}
}
\description{
This function creates rubias mixture and baseline files for different test scenarios. These files are supplied to \code{\link[=run_rubias_base_eval]{run_rubias_base_eval()}} for producing baseline evaluation estimates.
}
\details{
This function writes out rubias mixtures and baseline files for each test_group and scenario in sample_sizes. For a given test_group and scenario, the mixture file will contain randomly selected samples for each reporting group as defined in the sample_sizes tibble. The corresponding baseline file will contain all baseline samples except for those selected for the mixture.
The function can write .csv or .fst files.  .fst files are compressed, so they save hard drive space, and they are faster to save and read back into R. .csv is also an option to make the function backwards compatible with older analyzes that produced .csv files.
}
\examples{
attach("V:/Analysis/2_Central/Chinook/Susitna River/Susitna_Chinook_baseline_2020/Susitna_Chinook_baseline_2020.Rdata")
Final_Pops <- Final_Pops \%>\% mutate(group = factor(group, levels = unique(group)))
sample_sizes <- base_eval_sample_sizes(sillyvec = Final_Pops$silly, group_names = Final_Pops$group \%>\% levels(), groupvec = Final_Pops$group \%>\% as.numeric(), scenarios = round(seq(.01, 1, .01), 2), mixsize = 200, maxprop = 0.5)
create_rubias_base_eval(sillyvec = Final_Pops$silly, group_names = Final_Pops$group \%>\% levels(), test_groups = (Final_Pops$group \%>\% levels())[1:2], loci = loci80, groupvec = Final_Pops$group \%>\% as.numeric(), sample_sizes = sample_sizes, prprtnl = TRUE, seed = 123, ncores = 8)

}
