% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mutichain_inits.r
\name{mutichain_inits}
\alias{mutichain_inits}
\title{Generate Initialization Matrix for Multiple Chains}
\usage{
mutichain_inits(
  npops,
  nchains,
  prop = 0.9,
  type = c("BAYES", "rubias")[1],
  sillyvec = NULL
)
}
\arguments{
\item{npops}{Integer. The total number of populations to consider.}

\item{nchains}{Integer. The number of chains to be used. Must be greater than 1.}

\item{prop}{Numeric (optional). The proportion of the prior distribution to
allocate to each group in the chain initialization matrix. Default is 0.9.}

\item{type}{Character (optional). The type of initialization to be performed.
Possible values are "BAYES" for \link{BAYES} or "rubias" for \link{rubias}
modeling. Default is "BAYES".}

\item{sillyvec}{Numeric vector (optional). Required only when \code{type} is set
to rubias". The user must supply a vector containing silly values for each
chain. Default is NULL.}
}
\value{
A matrix or a list of tibbles, depending on the chosen \code{type}, where
rows represent different populations and columns represent different chains.
For "BAYES" type, the matrix contains the initial prior values for each
population in each chain. For "rubias" type, it returns a list of tibbles,
where each tibble contains a "collection" column with the supplied
\code{sillyvec} and a "pi_init" column containing the initial prior values for
each population in each chain.
}
\description{
This function generates an initialization matrix for multiple chains used in
Bayesian data analysis or rubias modeling. The matrix specifies the initial
values for each chain to facilitate the convergence of the chains to the
posterior distribution.
}
\details{
The function supports two types of initialization:
\itemize{
\item \code{"BAYES"}: Bayesian initialization where the prior distribution is
divided among the chains proportionally based on the \code{prop} argument.
The matrix returned represents the initial prior values for each population
in each chain.
\item \code{"rubias"}: Rubias initialization where a \code{sillyvec} is required
to provide initial values for each chain. The prior distribution is divided
among the chains based on the \code{GroupWeights} matrix, which represents
the proportion of prior to be allocated to each group in each chain. The
function returns a list of tibbles, each containing the supplied
\code{sillyvec} in the "collection" column and the initial prior values for
each population in each chain in the "pi_init" column.
}
}
\examples{
#Bayesian initialization with 5 populations and 3 chains
init_matrix_bayes <- GCLr::mutichain_inits(npops = 5, nchains = 3, prop = 0.8)

# Rubias initialization with 10 populations, 4 chains, and a supplied sillyvec
init_matrix_rubias <- GCLr::mutichain_inits(npops = 10, nchains = 4, prop = 0.8, type = "rubias",
                                     sillyvec = paste0("Pop", 1:10))

}
