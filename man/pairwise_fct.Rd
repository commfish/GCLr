% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pairwise_fct.r
\name{pairwise_fct}
\alias{pairwise_fct}
\title{Create Pairwise F~CT~ Matrix}
\usage{
pairwise_fct(
  sillyvec,
  loci,
  group_names,
  groupvec,
  ncores = parallel::detectCores(),
  LocusCtl = LocusControl
)
}
\arguments{
\item{sillyvec}{A character vector of silly codes without the ".gcl" extension.}

\item{loci}{A character vector of locus names.}

\item{group_names}{character vector of group names the length of \code{max(groupvec)}}

\item{groupvec}{a numeric vector indicating the group affiliation of each pop in \code{sillyvec}}

\item{ncores}{A numeric value for the number of cores to use in a \pkg{foreach} \verb{\%dopar\%} loop (default = 4).
The number of cores cannot exceeds the number on your device (\code{\link[parallel:detectCores]{parallel::detectCores()}}).}

\item{LocusCtl}{an object created by \code{\link[=create_locuscontrol]{create_locuscontrol()}} (default = LocusControl).}
}
\value{
A matrix of F~CT~ values between reporting groups
}
\description{
This function generates a matrix of pairwise Fct values.
}
\details{
The function calls on \code{\link[=create_hierfstat_data]{create_hierfstat_data()}} to create a \pkg{hierfstat} data object internally and the uses\code{\link[hierfstat:varcomp]{hierfstat::varcomp()}} to perform a 4-level analysis of variance (NOVA).
The variance components are then used to calculate F~CT~ between each reporting group. F~CT~ is a measure of genetic differentiation between groups of populations and is analogous to Fst between populations.
}
\examples{
  
  sillyvec <- GCLr::base2gcl(GCLr::ex_baseline)

  group_names <- GCLr::ex_baseline \%>\%
    dplyr::group_by(collection) \%>\%
    dplyr::summarize(group = unique(repunit)) \%>\%
    dplyr::pull(group) \%>\%
    unique()
  
  groupvec <- GCLr::ex_baseline \%>\%
    dplyr::group_by(collection) \%>\%
    dplyr::summarize(group = unique(repunit)) \%>\%
    dplyr::mutate(group = factor(group, levels = group_names) \%>\% as.numeric()) \%>\%
    dplyr::mutate(collection = factor(collection, levels = sillyvec)) \%>\% 
    dplyr::arrange(collection) \%>\% 
    dplyr::pull(group)


  loci <- GCLr::ex_baseline[,-c(1:5)] \%>\%
    names() \%>\%
    gsub(pattern = "*\\\\.1", x = ., replacement = "") \%>\%
    unique()
  
  
 pairwise_fct(sillyvec = sillyvec, loci = loci, group_names = group_names,  groupvec = groupvec, ncores = 20, LocusCtl = GCLr::ex_LocusControl)

}
